name: Build Distributables and Deploy Docs

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      build:
        description: 'Build Linux and Windows executables'
        required: true
        type: boolean
        default: true
      docs:
        description: 'Deploy Docusaurus docs'
        required: true
        type: boolean
        default: true

jobs:
  build-linux:
    name: Build Linux Executable
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.build == true }}
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.3

      # Install dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      # Install and build frontend
      - name: Build frontend
        run: |
          cd frontend
          npm install
          npm run build

      # Package backend with PyInstaller using the spec file
      - name: Build Linux executable
        run: |
          pyinstaller spotify-bot.spec

      # Upload Linux executable as artifact
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: spotify-bot-linux
          path: dist/spotify-bot

  build-windows:
    name: Build Windows Executable
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.build == true }}
    runs-on: windows-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.3

      # Install dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      # Install and build frontend
      - name: Build frontend
        run: |
          cd frontend
          npm install
          npm run build

      # Package backend with PyInstaller using the spec file
      - name: Build Windows executable
        run: |
          pyinstaller spotify-bot.spec

      # Upload Windows executable as artifact
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: spotify-bot-windows
          path: dist/spotify-bot.exe

  build-docs:
    name: Deploy Docusaurus Docs
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.docs == true }}
    runs-on: ubuntu-latest
    working-directory: ./docs
    needs: [build-linux, build-windows]

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      # Install dependencies and build the Docusaurus site
      - name: Install and Build Docusaurus
        run: |
          npm ci
          npm run build

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_USER: ${{ secrets.GIT_USER }}
          GIT_USER_NAME: ${{ secrets.GIT_USER }}
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
        run: |
          cd docs
          npm run deploy

      - name: Upload Build Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build

  deploy-docs:
    name: Deploy to GitHub Pages
    working-directory: ./docs
    needs: build-docs

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4